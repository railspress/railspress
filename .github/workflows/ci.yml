name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint & Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      
      - name: Run RuboCop
        run: bundle exec rubocop --parallel
      
      - name: Run Standard
        run: bundle exec standardrb

  security:
    name: Security Scans
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      
      - name: Run Brakeman
        run: bundle exec brakeman -q -w2
      
      - name: Run Bundler Audit
        run: bundle exec bundler-audit check --update

  test:
    name: Test (Ruby ${{ matrix.ruby }} / PG ${{ matrix.postgres }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        ruby: ['3.2', '3.3']
        postgres: ['14', '15']
    
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: railspress_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/railspress_test
      REDIS_URL: redis://localhost:6379/0
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      
      - name: Setup database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
      
      - name: Run tests
        run: bundle exec rspec --format progress --format RspecJunitFormatter --out tmp/rspec-results.xml
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ruby-${{ matrix.ruby }}-pg-${{ matrix.postgres }}
          path: tmp/rspec-results.xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: matrix.ruby == '3.3' && matrix.postgres == '15'
        with:
          files: ./coverage/coverage.xml
          fail_ci_if_error: false

  system:
    name: System Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: railspress_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/railspress_test
      REDIS_URL: redis://localhost:6379/0
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      
      - name: Setup database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
      
      - name: Run system tests
        run: bundle exec rspec spec/system --format progress
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: system-test-screenshots
          path: tmp/screenshots

  build:
    name: Build & Assets
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      
      - name: Precompile assets
        run: bundle exec rails assets:precompile
        env:
          RAILS_ENV: production
          SECRET_KEY_BASE: dummy
      
      - name: Check asset compilation
        run: ls -lah public/assets | head -20





