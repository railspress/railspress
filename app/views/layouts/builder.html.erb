<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Theme Builder - RailsPress</title>
  <!-- ðŸš€ ASSETS SERVED SANITY CHECK - NO CACHE DEV MODE ðŸš€ -->
  <!-- ðŸš€ CACHE BUSTING: <%= Time.current.to_i %> ðŸš€ -->
  <style>
    @keyframes spin {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }
    
    /* PROPER CSS VARIABLES FOR THEME SWITCHING */
    :root {
      --bg-primary: #ffffff;
      --bg-secondary: #f9fafb;
      --bg-tertiary: #f3f4f6;
      --text-primary: #111827;
      --text-secondary: #6b7280;
      --text-tertiary: #9ca3af;
      --border-primary: #e5e7eb;
      --border-secondary: #d1d5db;
      --hover-bg: #f3f4f6;
    }
    
    [data-theme="dark"] {
      --bg-primary: #171A1D;
      --bg-secondary: #2D3748;
      --bg-tertiary: #374151;
      --text-primary: #ffffff;
      --text-secondary: #d1d5db;
      --text-tertiary: #9ca3af;
      --border-primary: #374151;
      --border-secondary: #4b5563;
      --hover-bg: #374151;
    }
    
    /* Apply variables to all elements */
    body {
      background-color: var(--bg-secondary) !important;
      color: var(--text-primary) !important;
    }
    
              .theme-bg-primary { background-color: var(--bg-primary) !important; }
              .theme-bg-secondary { background-color: var(--bg-secondary) !important; }
              .theme-bg-tertiary { background-color: var(--bg-tertiary) !important; }
              .theme-text-primary { color: var(--text-primary) !important; }
              .theme-text-secondary { color: var(--text-secondary) !important; }
              .theme-text-tertiary { color: var(--text-tertiary) !important; }
              .theme-border-primary { border-color: var(--border-primary) !important; }
              .theme-border-secondary { border-color: var(--border-secondary) !important; }
              .theme-hover:hover { background-color: var(--hover-bg) !important; }
              
              /* Device button active state */
              .device-button.active {
                background-color: var(--hover-bg) !important;
                opacity: 1 !important;
              }
              
              /* Debug: Make active state more visible */
              .device-button.active svg {
                color: var(--text-primary) !important;
              }
  </style>
  
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  
  <!-- Tailwind CSS -->
  <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
  
  <!-- External Libraries -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/split.js@1.6.5/dist/split.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@simonwep/pickr@1.8.2/dist/themes/classic.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  
  <!-- Stimulus -->
  <%= javascript_importmap_tags %>
  
    <!-- LOCALSTORAGE THEME INITIALIZATION -->
    <script>
      console.log('ðŸš€ INITIALIZING THEME FROM LOCALSTORAGE');
      
      // Read theme from localStorage, default to 'light' if not set
      const savedTheme = localStorage.getItem('builder-theme') || 'light';
      console.log('ðŸ“± Saved theme from localStorage:', savedTheme);
      
      // Apply the saved theme immediately to prevent flash
      document.body.setAttribute('data-theme', savedTheme);
      document.documentElement.setAttribute('data-theme', savedTheme);
      
      if (savedTheme === 'dark') {
        document.body.classList.add('dark');
        document.documentElement.classList.add('dark');
      } else {
        document.body.classList.remove('dark');
        document.documentElement.classList.remove('dark');
      }
      
      console.log('âœ… Theme initialized from localStorage:', savedTheme);
    </script>
</head>
    <body class="h-full theme-bg-secondary" data-theme="light">
  <div class="h-full flex flex-col" data-controller="builder" data-builder-target="data" data-theme-id="<%= @builder_theme&.id %>" data-sections='<%= @sections&.to_json || '{}' %>' data-settings='<%= @settings&.to_json || '{}' %>' data-templates='<%= @available_templates&.to_json || '[]' %>' data-theme-schema='<%= @theme_schema&.to_json || '[]' %>'>
    <!-- Shopify-style Top Bar -->
    <header class="theme-bg-primary theme-border-primary border-b px-4 py-3 flex items-center justify-between">
      <!-- Left Section: Back button + Theme name + Menu -->
      <div class="flex items-center space-x-3">
        <!-- Back button -->
        <button onclick="history.back()" class="flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 21 20" class="w-5 h-5 theme-text-secondary" focusable="false">
            <path fill="currentColor" fill-rule="evenodd" d="M10.177 3H14.83c.535 0 .98 0 1.345.03.38.03.736.098 1.073.27a2.75 2.75 0 0 1 1.202 1.202c.172.337.24.693.27 1.073.03.365.03.81.03 1.345v5.91c0 .535 0 .98-.03 1.345-.03.38-.098.736-.27 1.073a2.75 2.75 0 0 1-1.201 1.202c-.338.172-.694.24-1.074.27-.365.03-.81.03-1.345.03H9.963c-.196 0-.347 0-.483-.013a2.75 2.75 0 0 1-2.467-2.467C7 14.134 7 13.983 7 13.787v-.037a.75.75 0 0 1 1.5 0c0 .25 0 .32.006.373a1.25 1.25 0 0 0 1.121 1.121c.052.005.123.006.373.006h4.8c.572 0 .957 0 1.252-.025.288-.023.425-.065.515-.111a1.25 1.25 0 0 0 .547-.546c.046-.091.088-.228.111-.515.024-.296.025-.68.025-1.253V6.95c0-.572 0-.957-.025-1.252-.023-.288-.065-.425-.111-.515a1.25 1.25 0 0 0-.547-.547l.339-.663-.338.663c-.091-.046-.228-.088-.516-.111-.295-.024-.68-.025-1.252-.025h-4.55c-.5 0-.641.004-.744.024a1.25 1.25 0 0 0-.982.982c-.02.103-.024.243-.024.744a.75.75 0 0 1-1.5 0v-.073c0-.393 0-.696.053-.963a2.75 2.75 0 0 1 2.16-2.161C9.482 3 9.784 3 10.178 3ZM4.56 10.5l.97.97a.75.75 0 0 1-1.061 1.06l-2.25-2.25a.75.75 0 0 1 0-1.06l2.25-2.25a.75.75 0 1 1 1.06 1.06L4.56 9h6.69a.75.75 0 0 1 0 1.5H4.56Z" clip-rule="evenodd"></path>
          </svg>
        </button>
        
        <!-- Theme name with active indicator -->
        <div class="flex items-center space-x-2">
          <h1 class="text-lg font-semibold theme-text-primary"><%= @builder_theme&.theme_name || 'Unknown Theme' %></h1>
          <% if @builder_theme&.is_theme_active? %>
            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
              <div class="w-2 h-2 bg-green-400 rounded-full mr-1"></div>
              Active
            </span>
          <% end %>
        </div>
        
        <!-- Dark mode toggle -->
        <button data-action="click->builder#toggleDarkMode" class="flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors" title="Toggle dark mode">
          <svg class="w-5 h-5 theme-text-secondary dark-mode-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <!-- Moon icon for light mode -->
            <path class="moon-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
            <!-- Sun icon for dark mode -->
            <path class="sun-icon hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
          </svg>
        </button>
        
        <!-- Three dots menu -->
        <div class="relative" data-controller="dropdown">
          <button data-action="click->dropdown#toggle" class="flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors">
            <svg class="w-5 h-5 theme-text-secondary" fill="currentColor" viewBox="0 0 20 20">
              <!-- Horizontal dots -->
              <path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z"></path>
            </svg>
          </button>
          <div data-dropdown-target="menu" class="hidden absolute left-0 mt-2 w-48 theme-bg-primary rounded-md shadow-lg theme-border-primary border z-50">
            <div class="py-1">
              <%= link_to admin_theme_editor_index_path, class: "flex items-center px-4 py-2 text-sm theme-text-primary theme-hover" do %>
                <svg class="w-4 h-4 mr-3 theme-text-tertiary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
                </svg>
                Edit code
              <% end %>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Center Section: Page selector dropdown -->
      <div class="flex-1 flex justify-center">
        <div class="relative">
          <select data-builder-target="templateSelector" class="appearance-none bg-transparent border-0 text-center text-lg font-medium theme-text-primary cursor-pointer focus:outline-none" data-action="change->builder#changeTemplate">
            <% @available_templates.each do |template| %>
              <option value="<%= template['template'] %>" <%= 'selected' if template['template'] == @current_template_name %>>
                <%= template['name'] %>
              </option>
            <% end %>
          </select>
          <div class="absolute inset-y-0 right-0 flex items-center pointer-events-none">
            <svg class="w-4 h-4 theme-text-tertiary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
        </div>
      </div>
      
      <!-- Right Section: Layout controls -->
      <div class="flex items-center space-x-2">
        
        
              <!-- Device preview controls -->
              <div class="flex items-center theme-bg-tertiary rounded-lg p-1">
          <button data-action="click->builder#setDevice" data-device="desktop" class="device-button flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors" title="Desktop">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
            </svg>
          </button>
          <button data-action="click->builder#setDevice" data-device="tablet" class="device-button flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors" title="Tablet">
            <svg class="w-4 h-4 theme-text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
            </svg>
          </button>
          <button data-action="click->builder#setDevice" data-device="mobile" class="device-button flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors" title="Mobile">
            <svg class="w-4 h-4 theme-text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
            </svg>
          </button>
        </div>
        
        <!-- View in new tab -->
        <button data-action="click->builder#viewInNewTab" class="flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors" title="View page in new tab">
          <svg class="w-4 h-4 theme-text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
          </svg>
        </button>
        
        <!-- Fullscreen toggle -->
        <button data-action="click->builder#toggleFullscreen" class="flex items-center justify-center w-8 h-8 rounded hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors" title="Toggle fullscreen">
          <svg class="w-4 h-4 text-gray-600 dark:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"></path>
          </svg>
        </button>
        
        <!-- Undo/Redo -->
        <div class="flex items-center space-x-1">
          <button data-action="click->builder#undo" class="flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors" title="Undo">
            <svg class="w-4 h-4 theme-text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"></path>
            </svg>
          </button>
          <button data-action="click->builder#redo" class="flex items-center justify-center w-8 h-8 rounded theme-hover transition-colors" title="Redo">
            <svg class="w-4 h-4 theme-text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 10H11a8 8 0 00-8 8v2m18-10l-6 6m6-6l-6-6"></path>
            </svg>
          </button>
        </div>
        
              <!-- SINGLE AUTOSAVE INDICATOR OUTSIDE CONTAINER -->
              <div class="autosave-indicator w-3 h-3 bg-green-500 rounded-full" title="Autosave enabled"></div>
        
        <!-- Publish button - Shopify style -->
        <button data-action="click->builder#publish" class="bg-gray-900 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-gray-800 transition-colors shadow-sm">
          Publish
        </button>
      </div>
    </header>
    
    <!-- Main Content -->
    <div class="flex-1 flex overflow-hidden" data-split-container="true">
      <!-- Left Panel - Current Page -->
      <div class="w-80 theme-bg-primary theme-border-primary border-r flex flex-col" data-split-panel="left">
        <div class="p-4 theme-border-primary border-b">
          <h2 class="text-lg font-medium theme-text-primary">Current Page</h2>
          <p class="text-sm theme-text-secondary">Drag to reorder sections</p>
        </div>
        
        <div class="flex-1 overflow-y-auto p-4">
          <div data-builder-target="sectionsList" data-controller="sortable">
            <% if @current_page_sections&.any? && @section_order&.any? %>
              <!-- DEBUG: Section order: <%= @section_order.inspect %> -->
              <!-- DEBUG: Section count: <%= @section_order.count %> -->
              <!-- DEBUG: Section order unique: <%= @section_order.uniq.inspect %> -->
              <!-- DEBUG: Section order unique count: <%= @section_order.uniq.count %> -->
              <!-- DEBUG: Has duplicates: <%= @section_order.count != @section_order.uniq.count %> -->
              <!-- DEBUG: Cache busting timestamp: <%= Time.current.to_i %> -->
              <!-- DEBUG: Current page sections keys: <%= @current_page_sections.keys.inspect %> -->
              <% 
                # FORCE DEDUPLICATION: Remove duplicates and preserve order
                unique_section_order = @section_order.uniq
                Rails.logger.info "HTML TEMPLATE: Original order #{@section_order.count} sections, unique order #{unique_section_order.count} sections"
                
                # EMERGENCY FIX: If we still have duplicates, log them
                if @section_order.count != @section_order.uniq.count
                  Rails.logger.error "ðŸš¨ DUPLICATES DETECTED IN HTML TEMPLATE!"
                  Rails.logger.error "Original: #{@section_order.inspect}"
                  Rails.logger.error "Unique: #{unique_section_order.inspect}"
                end
              %>
              <% unique_section_order.each_with_index do |section_id, index| %>
                <% section_config = @current_page_sections[section_id] %>
                <!-- DEBUG: Rendering section <%= index %>: <%= section_id %> -->
                <% if section_config %>
                  <div class="section-item theme-bg-secondary theme-border-secondary border rounded-lg mb-2" 
                       data-section-id="<%= section_id %>" 
                       data-section-type="<%= section_config['type'] %>"
                       data-settings="<%= section_config['settings'].to_json %>"
                       data-action="click->builder#selectSection"
                       data-section-id-param="<%= section_id %>">
                    
                    <!-- Section Header -->
                    <div class="flex items-center justify-between p-3">
                      <div class="flex items-center space-x-3 flex-1">
                        <div class="drag-handle theme-text-tertiary hover:theme-text-secondary cursor-move">
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8h16M4 16h16"></path>
                          </svg>
                        </div>
                        <div class="flex items-center space-x-2">
                          <svg class="w-4 h-4 theme-text-tertiary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                          </svg>
                          <h4 class="font-medium theme-text-primary"><%= section_config['type'].humanize %></h4>
                        </div>
                      </div>
                      <div class="flex items-center space-x-2">
                        <!-- Add Block Button (for sections that support blocks) -->
                        <% if section_config['type'] == 'accordion' || section_config['type'] == 'columns' || section_config['type'] == 'features' || section_config['type'] == 'testimonials' %>
                          <button class="text-blue-500 hover:text-blue-700" data-action="click->builder#addBlock" data-section-id="<%= section_id %>" title="Add Block">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                            </svg>
                          </button>
                        <% end %>
                        <!-- Remove Section Button -->
                        <button class="text-red-500 hover:text-red-700" data-action="click->builder#removeSectionAction" data-section-id="<%= section_id %>" title="Remove Section">
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                          </svg>
                        </button>
                      </div>
                    </div>
                    
                    <!-- Blocks Tree (if section has blocks) -->
                    <% if section_config['blocks'] && section_config['blocks'].any? %>
                      <div class="blocks-tree theme-border-secondary border-t">
                        <% section_config['blocks'].each_with_index do |block, block_index| %>
                          <div class="block-item theme-bg-tertiary theme-border-secondary border-b last:border-b-0 p-2 pl-6" 
                               data-block-id="<%= block['id'] %>" 
                               data-block-type="<%= block['type'] %>"
                               data-section-id="<%= section_id %>"
                               data-action="click->builder#selectBlock">
                            <div class="flex items-center justify-between">
                              <div class="flex items-center space-x-2">
                                <div class="drag-handle theme-text-tertiary hover:theme-text-secondary cursor-move">
                                  <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                                  </svg>
                                </div>
                                <svg class="w-3 h-3 theme-text-tertiary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                                </svg>
                                <span class="text-sm theme-text-secondary"><%= block['type'].humanize %></span>
                                <% if block['settings'] && block['settings']['title'] %>
                                  <span class="text-xs theme-text-tertiary">- <%= block['settings']['title'] %></span>
                                <% end %>
                              </div>
                              <button class="text-red-400 hover:text-red-600" data-action="click->builder#removeBlock" data-block-id="<%= block['id'] %>" data-section-id="<%= section_id %>" title="Remove Block">
                                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                              </button>
                            </div>
                          </div>
                        <% end %>
                      </div>
                    <% end %>
                  </div>
                <% end %>
              <% end %>
            <% else %>
              <div class="text-center theme-text-secondary py-8">
                <p>No sections added yet</p>
                <p class="text-sm">Click "Add Section" to get started</p>
              </div>
            <% end %>
          </div>
        </div>
        
        <div class="p-4 theme-border-primary border-t">
          <button data-action="click->builder#addSection" class="w-full text-sm theme-bg-primary theme-text-primary px-4 py-2 rounded-md theme-border-secondary border hover:theme-bg-secondary hover:theme-border-secondary flex items-center justify-center font-medium shadow-sm transition-colors">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
            </svg>
            Add Section
          </button>
        </div>
      </div>
      
      <!-- Middle Panel - Preview -->
      <div class="flex-1 flex flex-col" data-split-panel="middle">
        <div class="flex-1 theme-bg-secondary p-4">
          <div class="h-full theme-bg-primary rounded-lg shadow-sm overflow-hidden">
            <iframe 
              data-builder-target="previewFrame" 
              src="<%= preview_admin_builder_path(@builder_theme, template: @current_template_name) %>"
              class="w-full h-full border-0"
              data-controller="preview-frame">
            </iframe>
          </div>
        </div>
      </div>
      
      <!-- Right Panel - Settings -->
      <div class="w-96 theme-bg-primary theme-border-primary border-l flex flex-col" data-split-panel="right">
        <!-- Tabs -->
        <div class="flex theme-border-primary border-b">
          <button data-builder-target="sectionTab" data-action="click->builder#showSectionSettings" class="flex-1 px-4 py-2 text-sm font-medium theme-text-primary theme-bg-primary border-b-2 border-blue-500">
            Section
          </button>
          <button data-builder-target="themeTab" data-action="click->builder#showThemeSettings" class="flex-1 px-4 py-2 text-sm font-medium theme-text-secondary theme-hover">
            Theme
          </button>
        </div>
        
        <!-- Section Settings Panel -->
        <div data-builder-target="sectionSettingsPanel" class="flex-1 overflow-y-auto p-4">
          <div class="text-center theme-text-secondary py-8">
            <p>Select a section to edit its settings</p>
          </div>
        </div>
        
        <!-- Theme Settings Panel -->
        <div data-builder-target="themeSettingsPanel" class="flex-1 overflow-y-auto p-4 hidden">
          <div class="text-center theme-text-secondary py-8">
            <p>Theme settings will appear here</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Section Modal -->
  <div id="addSectionModal" class="hidden fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[650px] h-[480px] shadow-lg rounded-lg theme-bg-primary z-50 max-w-[calc(100%-2rem)]">
      <!-- Modal Header -->
      <div class="flex items-center justify-between p-6 theme-border-primary border-b">
        <h3 class="text-lg font-medium theme-text-primary">Add Section</h3>
        <button data-action="click->builder#closeAddSectionModal" class="theme-text-tertiary theme-hover">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <!-- Modal Content -->
      <div class="flex h-[336px]">
        <!-- Left Panel - Sections List -->
        <div class="w-1/2 theme-border-primary border-r flex flex-col">
          <div class="p-4 theme-border-primary border-b">
            <h4 class="text-sm font-medium theme-text-primary">Sections</h4>
            <p class="text-xs theme-text-secondary mt-1">Choose a section to add to your page</p>
          </div>
          <div class="flex-1 overflow-y-auto">
            <div id="availableSections" class="p-4 space-y-2">
              <!-- Available sections will be populated here -->
            </div>
          </div>
        </div>
        
        <!-- Right Panel - Preview -->
        <div class="w-1/2 flex flex-col">
          <div class="p-4 theme-border-primary border-b">
            <h4 class="text-sm font-medium theme-text-primary">Preview</h4>
            <p class="text-xs theme-text-secondary mt-1">See how this section will look</p>
          </div>
          <div class="flex-1 p-4 theme-bg-secondary">
            <div id="sectionPreview" class="h-full theme-bg-primary rounded theme-border-primary border flex items-center justify-center">
              <p class="theme-text-secondary text-sm">Select a section to see preview</p>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Modal Footer -->
      <div class="flex justify-between items-center p-6 theme-border-primary border-t">
        <div class="text-sm theme-text-secondary">
          <span id="selectedSectionName" class="font-medium">No section selected</span>
        </div>
        <div class="flex space-x-3">
          <button data-action="click->builder#closeAddSectionModal" class="px-4 py-2 text-sm font-medium theme-text-secondary theme-bg-tertiary rounded-md theme-hover">
            Cancel
          </button>
          <button id="addSelectedSectionBtn" data-action="click->builder#addSelectedSection" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed" disabled>
            Add Section
          </button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- External JavaScript Libraries -->
  
  <script src="https://cdn.jsdelivr.net/npm/split.js@1.6.5/dist/split.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@simonwep/pickr@1.8.2/dist/pickr.min.js"></script>
  
  <!-- Initialize Split.js -->
  <script>
    function initializeSplitPanels() {
      // Check if Split.js is available
      if (typeof Split === 'undefined') {
        console.warn('Split.js not loaded, using fallback layout');
        return;
      }
      
      const leftPanel = document.querySelector('[data-split-panel="left"]');
      const middlePanel = document.querySelector('[data-split-panel="middle"]');
      const rightPanel = document.querySelector('[data-split-panel="right"]');
      
      console.log('Split.js panels found:', {
        left: !!leftPanel,
        middle: !!middlePanel,
        right: !!rightPanel
      });
      
      // Ensure all panels exist and are in the DOM
      if (leftPanel && middlePanel && rightPanel) {
        // Verify panels are properly connected to the DOM
        const leftParent = leftPanel.parentNode;
        const middleParent = middlePanel.parentNode;
        const rightParent = rightPanel.parentNode;
        
        if (leftParent && middleParent && rightParent && 
            leftParent === middleParent && middleParent === rightParent) {
          try {
            // Initialize split panes
            const splitInstance = Split([leftPanel, middlePanel, rightPanel], {
              sizes: [25, 50, 25],
              minSize: [200, 300, 250],
              gutterSize: 8,
              cursor: 'col-resize',
              onDrag: function() {
                // Handle resize events
                console.log('Panels resized');
              },
              onDragEnd: function() {
                // Save panel sizes to localStorage
                const sizes = splitInstance.getSizes();
                localStorage.setItem('builder-panel-sizes', JSON.stringify(sizes));
              }
            });
            
            // Restore saved panel sizes
            const savedSizes = localStorage.getItem('builder-panel-sizes');
            if (savedSizes) {
              try {
                const sizes = JSON.parse(savedSizes);
                splitInstance.setSizes(sizes);
              } catch (e) {
                console.warn('Could not restore panel sizes:', e);
              }
            }
            
            console.log('Split.js initialized successfully');
            return splitInstance;
          } catch (error) {
            console.error('Split.js initialization failed:', error);
            // Fallback: ensure panels are still functional without split
            console.log('Falling back to static panel layout');
          }
        } else {
          console.error('Panels are not properly connected to the same parent');
        }
      } else {
        console.error('Could not find all required panels for Split.js');
      }
    }
    
    document.addEventListener('DOMContentLoaded', function() {
      // Wait for Stimulus to initialize and DOM to be fully rendered
      setTimeout(function() {
        initializeSplitPanels();
      }, 300); // Increased timeout to ensure DOM is fully ready
    });
    
    // Also try to initialize when the page is fully loaded
    window.addEventListener('load', function() {
      setTimeout(function() {
        if (!document.querySelector('.gutter')) {
          console.log('Split.js not initialized, trying again...');
          initializeSplitPanels();
        }
      }, 100);
    });
  </script>
  
  <!-- Fallback CSS for panels without Split.js -->
  <style>
    [data-split-container="true"] {
      display: flex;
      height: 100%;
    }
    
    [data-split-panel="left"] {
      width: 320px;
      min-width: 200px;
      flex-shrink: 0;
    }
    
    [data-split-panel="middle"] {
      flex: 1;
      min-width: 300px;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      padding-top: 2rem;
    }
    
    [data-split-panel="right"] {
      width: 384px;
      min-width: 250px;
      flex-shrink: 0;
    }
    
    /* Device preview styles - handled entirely by JavaScript */
    
    /* Ensure panels are properly sized on mobile */
    @media (max-width: 768px) {
      [data-split-container="true"] {
        flex-direction: column;
      }
      
      [data-split-panel="left"],
      [data-split-panel="middle"],
      [data-split-panel="right"] {
        width: 100% !important;
        min-width: unset !important;
        height: 33.333vh;
      }
      
      [data-split-panel="middle"] {
        padding-top: 1rem;
      }
    }
  </style>

  <script>
    // Cache-busting timestamp
    console.log('ðŸš€ Builder page loaded at:', new Date().toISOString());
  </script>
  
</body>
</html>
