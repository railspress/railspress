<% content_for :title, "Posts" %>

<link href="https://cdn.jsdelivr.net/npm/tabulator-tables@6.2.1/dist/css/tabulator_midnight.min.css" rel="stylesheet">
<%= stylesheet_link_tag "tabulator_custom", "data-turbo-track": "reload" %>

<div class="max-w-7xl mx-auto px-0 sm:px-0">
  <% if notice.present? %>
    <div class="mb-6 p-4 bg-green-500/10 border border-green-500/20 rounded-xl">
      <p class="text-green-400 font-medium" id="notice"><%= notice %></p>
    </div>
  <% end %>

  <div class="flex justify-between items-center mb-8">
    <div>
      <h1 class="text-3xl font-bold text-white mb-2">Posts</h1>
      <div class="flex items-center gap-4">
        <%= link_to admin_posts_path, class: "text-sm #{'text-indigo-400 font-medium' if params[:show_trash] != 'true'}" do %>
          All Posts
        <% end %>
        <%= link_to admin_posts_path(show_trash: true), class: "text-sm #{'text-indigo-400 font-medium' if params[:show_trash] == 'true'}" do %>
          <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
          </svg>
          Trash
        <% end %>
      </div>
    </div>
    <div class="flex items-center gap-3">
      <% unless params[:show_trash] == 'true' %>
        <%= link_to write_admin_posts_path, class: "bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 font-medium" do %>
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"/>
          </svg>
          Write
        <% end %>
        <%= link_to new_admin_post_path, class: "bg-[#2a2a2a] hover:bg-[#3a3a3a] text-white px-4 py-2 rounded-lg font-medium" do %>
          New Post
        <% end %>
      <% end %>
    </div>
  </div>

  <!-- Stats Cards -->
  <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
    <div class="bg-[#1a1a1a] border border-[#2a2a2a] rounded-xl p-6">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <svg class="w-8 h-8 text-indigo-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
          </svg>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-400">Total Posts</p>
          <p class="text-2xl font-bold text-white"><%= Post.kept.count %></p>
        </div>
      </div>
    </div>
    
    <div class="bg-[#1a1a1a] border border-[#2a2a2a] rounded-xl p-6">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <svg class="w-8 h-8 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-400">Published</p>
          <p class="text-2xl font-bold text-white"><%= Post.published.count %></p>
        </div>
      </div>
    </div>
    
    <div class="bg-[#1a1a1a] border border-[#2a2a2a] rounded-xl p-6">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <svg class="w-8 h-8 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-400">Drafts</p>
          <p class="text-2xl font-bold text-white"><%= Post.where(status: 'draft').count %></p>
        </div>
      </div>
    </div>
    
    <div class="bg-[#1a1a1a] border border-[#2a2a2a] rounded-xl p-6">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <svg class="w-8 h-8 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
          </svg>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-400">In Trash</p>
          <p class="text-2xl font-bold text-white"><%= Post.discarded.count %></p>
        </div>
      </div>
    </div>
  </div>

  <!-- Filters and Bulk Actions -->
  <div class="bg-[#1a1a1a] border border-[#2a2a2a] rounded-xl p-4 mb-4">
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-4">
        <select id="bulk-action" class="px-4 py-2 bg-[#0a0a0a] border border-[#2a2a2a] text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
          <option value="">Bulk Actions</option>
          <option value="publish">Publish</option>
          <option value="unpublish">Unpublish</option>
          <option value="delete">Move to Trash</option>
          <% if params[:show_trash] == 'true' %>
            <option value="restore">Restore</option>
            <option value="permanent_delete">Permanently Delete</option>
          <% end %>
        </select>
        <button id="apply-bulk" class="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition">
          Apply
        </button>
      </div>
      
      <div class="flex items-center space-x-2">
        <input type="text" id="search-input" placeholder="Search posts..." 
               class="px-4 py-2 bg-[#0a0a0a] border border-[#2a2a2a] text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
        <select id="status-filter" class="px-4 py-2 bg-[#0a0a0a] border border-[#2a2a2a] text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
          <option value="">All Statuses</option>
          <option value="draft">Draft</option>
          <option value="published">Published</option>
          <option value="scheduled">Scheduled</option>
          <option value="pending_review">Pending Review</option>
        </select>
      </div>
    </div>
  </div>

  <!-- Tabulator Table -->
  <div class="bg-[#1a1a1a] border border-[#2a2a2a] rounded-xl overflow-hidden">
    <div id="posts-table"></div>
  </div>
</div>

<script>
  async function initPostsTable() {
    const tableElement = document.getElementById('posts-table');
    if (!tableElement) return;
    
    // Destroy existing table if it exists
    if (tableElement._tabulator) {
      tableElement._tabulator.destroy();
    }
    
    // Load Tabulator if not already loaded
    if (typeof Tabulator === 'undefined') {
      const { TabulatorFull: Tabulator } = await import("tabulator-tables");
      window.Tabulator = Tabulator;
    }
    
    const table = new window.Tabulator("#posts-table", {
      data: <%= raw @posts_data.to_json %>,
      layout: "fitColumns",
      responsiveLayout: "hide",
      pagination: true,
      paginationSize: 25,
      paginationSizeSelector: [10, 25, 50, 100],
      movableColumns: true,
      resizableRows: true,
      selectable: true,
      placeholder: "No Posts Found",
      columns: [
        {
          formatter: "rowSelection",
          titleFormatter: "rowSelection",
          hozAlign: "center",
          headerSort: false,
          width: 40
        },
        {
          title: "Title",
          field: "title",
          sorter: "string",
          headerFilter: "input",
          formatter: function(cell) {
            const row = cell.getRow().getData();
            return `<div class="py-2">
              <a href="/admin/posts/${row.id}/edit" class="text-white hover:text-indigo-400 font-medium">
                ${row.title}
              </a>
              <div class="text-xs text-gray-500 mt-1">
                /<span class="text-gray-400">${row.slug}</span>
              </div>
            </div>`;
          }
        },
        {
          title: "Author",
          field: "author",
          sorter: "string",
          width: 150,
          formatter: function(cell) {
            return `<span class="text-gray-300">${cell.getValue()}</span>`;
          }
        },
        {
          title: "Categories",
          field: "categories",
          sorter: "string",
          width: 200,
          formatter: function(cell) {
            return `<span class="text-gray-300">${cell.getValue()}</span>`;
          }
        },
        {
          title: "Status",
          field: "status",
          sorter: "string",
          width: 120,
          formatter: function(cell) {
            const status = cell.getValue();
            const colors = {
              'draft': 'bg-gray-500/10 text-gray-400',
              'published': 'bg-emerald-500/10 text-emerald-400',
              'scheduled': 'bg-blue-500/10 text-blue-400',
              'pending_review': 'bg-yellow-500/10 text-yellow-400'
            };
            const color = colors[status] || 'bg-gray-500/10 text-gray-400';
            return `<span class="px-2 py-1 rounded-md text-xs font-medium ${color}">${status.replace('_', ' ').toUpperCase()}</span>`;
          }
        },
        {
          title: "Created",
          field: "created_at",
          sorter: "string",
          width: 150,
          formatter: function(cell) {
            return `<span class="text-gray-400 text-sm">${cell.getValue()}</span>`;
          }
        },
        {
          title: "Published",
          field: "published_at",
          sorter: "string",
          width: 150,
          formatter: function(cell) {
            const value = cell.getValue();
            return value ? `<span class="text-gray-400 text-sm">${value}</span>` : '<span class="text-gray-600 text-sm">—</span>';
          }
        },
        {
          title: "Actions",
          field: "actions",
          headerSort: false,
          width: 200,
          formatter: function(cell) {
            const row = cell.getRow().getData();
            const status = row.status;
            const isPublished = status === 'published';
            const isTrashed = <%= params[:show_trash] == 'true' ? 'true' : 'false' %>;
            
            return `<div class="flex items-center space-x-1">
              <a href="/admin/posts/${row.id}" 
                 class="p-2 text-gray-400 hover:text-blue-400 rounded-lg hover:bg-blue-500/10 transition"
                 title="View">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                </svg>
              </a>
              <a href="/admin/posts/${row.id}/edit" 
                 class="p-2 text-gray-400 hover:text-indigo-400 rounded-lg hover:bg-indigo-500/10 transition"
                 title="Edit">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                </svg>
              </a>
              ${isTrashed ? 
                `<a href="/admin/posts/${row.id}/restore" data-turbo-method="patch"
                    class="p-2 text-gray-400 hover:text-green-400 rounded-lg hover:bg-green-500/10 transition"
                    title="Restore">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                  </svg>
                </a>` :
                `${isPublished ? 
                  `<a href="/admin/posts/${row.id}/unpublish" data-turbo-method="patch"
                      class="p-2 text-gray-400 hover:text-orange-400 rounded-lg hover:bg-orange-500/10 transition"
                      title="Unpublish">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728"/>
                    </svg>
                  </a>` :
                  `<a href="/admin/posts/${row.id}/publish" data-turbo-method="patch"
                      class="p-2 text-gray-400 hover:text-green-400 rounded-lg hover:bg-green-500/10 transition"
                      title="Publish">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                  </a>`
                }`
              }
              <a href="/admin/posts/${row.id}" data-turbo-method="delete" data-turbo-confirm="${isTrashed ? 'Permanently delete this post? This cannot be undone.' : 'Move this post to trash?'}"
                 class="p-2 text-gray-400 hover:text-red-400 rounded-lg hover:bg-red-500/10 transition"
                 title="${isTrashed ? 'Permanently Delete' : 'Move to Trash'}">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                </svg>
              </a>
            </div>`;
          }
        }
      ],
    });

    // Search functionality
    document.getElementById('search-input').addEventListener('keyup', function(e) {
      table.setFilter("title", "like", this.value);
    });

    // Status filter
    document.getElementById('status-filter').addEventListener('change', function(e) {
      if(this.value) {
        table.setFilter("status", "=", this.value);
      } else {
        table.clearFilter();
      }
    });

    // Bulk actions
    document.getElementById('apply-bulk').addEventListener('click', function() {
      const action = document.getElementById('bulk-action').value;
      const selectedRows = table.getSelectedData();
      
      if(!action) {
        showWarningToast('Please select an action');
        return;
      }
      
      if(selectedRows.length === 0) {
        showWarningToast('Please select at least one post');
        return;
      }
      
      if((action === 'delete' || action === 'permanent_delete') && !confirm(`Are you sure you want to ${action === 'permanent_delete' ? 'permanently delete' : 'move to trash'} ${selectedRows.length} posts?`)) {
        return;
      }
      
      const postIds = selectedRows.map(row => row.id);
      
      fetch('/admin/posts/bulk_action', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
        },
        body: JSON.stringify({
          action_type: action,
          post_ids: postIds
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success || data.message) {
          showSuccessToast(data.message || 'Action completed successfully');
        } else {
          showErrorToast(data.error || 'Action failed');
        }
        table.replaceData();
        table.deselectRow();
        document.getElementById('bulk-action').value = '';
      })
      .catch(error => {
        console.error('Error:', error);
        showErrorToast('An error occurred. Please try again.');
      });
    });
  });
  
  // Initialize on page load
  document.addEventListener('turbo:load', initPostsTable);
  document.addEventListener('DOMContentLoaded', initPostsTable);
  
  // Cleanup before Turbo caches the page
  document.addEventListener('turbo:before-cache', function() {
    const tableElement = document.getElementById('posts-table');
    if (tableElement && tableElement._tabulator) {
      tableElement._tabulator.destroy();
    }
  });
</script>
